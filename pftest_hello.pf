! 1. This test suite should be executed with atleast 3 MPI processes
! 2. When building these tests pass the "-DUSE_MPI=YES" to the 
! compiler. If this option is not provided only the non-MPI tests,
! tests that don't have npes specified, will be run

module test_helloworld
  use pfunit_mod
contains

@test
  subroutine test_hello()
    implicit none

    call hello()
    @assertTrue(.true.)
  end subroutine test_hello

@test(npes=[1])
  subroutine test_hello_single_proc(this)
    implicit none
    class (MpiTestMethod), intent(inout) :: this
    integer comm, size, rank, tmp
    integer ierr

    print *, "Test resticted to single proc"
    comm = this%getMpiCommunicator()

    call MPI_COMM_SIZE(comm, size, ierr)
    tmp = this%getNumProcesses()
    @mpiAssertEqual(size, tmp)

    @mpiAssertEqual(size, 1)
  end subroutine test_hello_single_proc

@test(npes=[2,3])
  subroutine test_hello_multi_proc(this)
    implicit none
    class (MpiTestMethod), intent(inout) :: this
    integer comm, size, rank
    integer ierr

    print *, "Test resticted for 2 & 3 procs"
    comm = this%getMpiCommunicator()

    call MPI_COMM_SIZE(comm, size, ierr)
    @mpiAssertTrue((size == 2) .OR. (size ==3))
  end subroutine test_hello_multi_proc
end module test_helloworld

