! 1. This test suite should be executed with atleast 3 MPI processes
! 2. When building these tests pass the "-DUSE_MPI=YES" to the 
! compiler. If this option is not provided only the non-MPI tests,
! tests that don't have npes specified, will be run

module test_before_after
  use pfunit_mod
  implicit none

  integer :: num_tests 
  integer :: test_sz = 0
  public :: init, finalise, test_one, test_two
contains

@before
  subroutine init(this)
    implicit none
    class (MpiTestMethod), intent(inout) :: this
    integer comm, size, rank
    integer ierr

    comm = this%getMpiCommunicator()

    call MPI_COMM_SIZE(comm, size, ierr)

    num_tests = 0
    test_sz = size
  end subroutine init

! Cannot use "finalize" because "pfunit_mod" already
! defines it - yikes
@after
  subroutine finalise(this)
    implicit none
    class (MpiTestMethod), intent(inout) :: this
    integer comm, size, rank
    integer ierr

    comm = this%getMpiCommunicator()

    call MPI_COMM_SIZE(comm, size, ierr)

    ! "num_tests" should be equal to 1 - Since the init/finalize
    ! is run before every test
    @mpiAssertEqual(num_tests, 1, "Number of tests is not equal to 1")

    @mpiAssertEqual(test_sz, size)

  end subroutine finalise
    
@test(npes=[2,3])
  subroutine test_one(this)
    implicit none
    class (MpiTestMethod), intent(inout) :: this

    num_tests = num_tests + 1
    @mpiAssertFalse(test_sz == 0, "Test size is equal to 0 - fixtures not working")
  end subroutine test_one

@test(npes=[1,2])
  subroutine test_two(this)
    implicit none
    class (MpiTestMethod), intent(inout) :: this

    num_tests = num_tests + 1
    @mpiAssertFalse(test_sz == 0, "Test size is equal to 0 - fixtures not working")
  end subroutine test_two

end module test_before_after

